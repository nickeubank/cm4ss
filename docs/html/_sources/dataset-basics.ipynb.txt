{
 "cells": [
  {
   "cell_type": "markdown",
   "source": [
    "# Dataset Basics\n",
    "\n",
    "This tutorial introduces datasets --- \"data frames\" in R. If you've completed the [tutorial on vectors](vectors.ipynb), you'll soon see that datasets can be thought of as a collection of vectors stored as columns in a dataset. We'll talk about how to create datasets and how to read them from file. We'll also talk more conceptually about how datasets should be structured.\n"
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Creating datasets\n",
    "\n",
    "Let's start by learning how to create a dataset in R. This turns\n",
    "out to be very simple --- just combine vectors using the `data.frame()`\n",
    "command. \n"
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "source": [
    "# Create three vectors \n",
    "name <- c(\"al\", \"bea\", \"carol\")\n",
    "age <- c(6, 7, 4)\n",
    "hair <- c(\"brown\", \"green\", \"blond\")\n",
    "\n",
    "# Create data frame \n",
    "children <- data.frame(name, age, hair)\n",
    "children\n",
    "\n",
    "# Creating a data frame can also be done without first saving vectors \n",
    "children <- data.frame(\n",
    "    name = c(\"al\", \"bea\", \"carol\"),\n",
    "    age = c(6, 7, 4),\n",
    "    hair = c(\"brown\", \"green\", \"blond\")\n",
    "    )\n",
    "children"
   ],
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "  name  age hair \n",
       "1 al    6   brown\n",
       "2 bea   7   green\n",
       "3 carol 4   blond"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 3 × 3\n",
       "\n",
       "| name &lt;chr&gt; | age &lt;dbl&gt; | hair &lt;chr&gt; |\n",
       "|---|---|---|\n",
       "| al    | 6 | brown |\n",
       "| bea   | 7 | green |\n",
       "| carol | 4 | blond |\n",
       "\n"
      ],
      "text/latex": [
       "A data.frame: 3 × 3\n",
       "\\begin{tabular}{lll}\n",
       " name & age & hair\\\\\n",
       " <chr> & <dbl> & <chr>\\\\\n",
       "\\hline\n",
       "\t al    & 6 & brown\\\\\n",
       "\t bea   & 7 & green\\\\\n",
       "\t carol & 4 & blond\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 3 × 3</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>name</th><th scope=col>age</th><th scope=col>hair</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;chr&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>al   </td><td>6</td><td>brown</td></tr>\n",
       "\t<tr><td>bea  </td><td>7</td><td>green</td></tr>\n",
       "\t<tr><td>carol</td><td>4</td><td>blond</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ]
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "  name  age hair \n",
       "1 al    6   brown\n",
       "2 bea   7   green\n",
       "3 carol 4   blond"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 3 × 3\n",
       "\n",
       "| name &lt;chr&gt; | age &lt;dbl&gt; | hair &lt;chr&gt; |\n",
       "|---|---|---|\n",
       "| al    | 6 | brown |\n",
       "| bea   | 7 | green |\n",
       "| carol | 4 | blond |\n",
       "\n"
      ],
      "text/latex": [
       "A data.frame: 3 × 3\n",
       "\\begin{tabular}{lll}\n",
       " name & age & hair\\\\\n",
       " <chr> & <dbl> & <chr>\\\\\n",
       "\\hline\n",
       "\t al    & 6 & brown\\\\\n",
       "\t bea   & 7 & green\\\\\n",
       "\t carol & 4 & blond\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 3 × 3</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>name</th><th scope=col>age</th><th scope=col>hair</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;chr&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>al   </td><td>6</td><td>brown</td></tr>\n",
       "\t<tr><td>bea  </td><td>7</td><td>green</td></tr>\n",
       "\t<tr><td>carol</td><td>4</td><td>blond</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ]
     },
     "metadata": {}
    }
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "We created a dataset called `children`, which has 3 rows and 3\n",
    "columns. We used two approaches that differ in whether they first save\n",
    "vectors to R's memory. "
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Dataset structure\n",
    "\n",
    "More important than learning the mechanics of creating a dataset in\n",
    "R is to understand their general structure: \n",
    "\n",
    "1. Each column should consist of a vector that gives some fact about\n",
    "the world (e.g., age in years). We usually refer to these columns\n",
    "as *variables*. \n",
    "2. At least one column should identify who or what the information in\n",
    "the data is about.  Such a variable is called an \"id\" variable or\n",
    "\"key\". In the `children` dataset above this variable is `name`. The\n",
    "remaining variables have the facts or measurements that we care\n",
    "about. For example, we gather from the dataset that Al is 6 years old\n",
    "(one fact) and that Al has brown hair (a second fact).\n",
    "\n",
    "To better understand the proper structure of datasets, let's create a\n",
    "second data frame. Suppose here that `gdp_pc` is a measure of a\n",
    "country's GDP per capita in a given year. (Use `?expand.grid` and\n",
    "`?runif` to learn more about these functions, though that is not a\n",
    "priority right now.)"
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "source": [
    "countries <- data.frame(\n",
    "    expand.grid(country = c(\"USA\", \"China\", \"Sudan\"), year = 1994:1996),\n",
    "    gdp_pc = round(runif(9, 1000, 20000), 0)\n",
    "    )\n",
    "countries"
   ],
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "  country year gdp_pc\n",
       "1 USA     1994 17399 \n",
       "2 China   1994 15964 \n",
       "3 Sudan   1994 19520 \n",
       "4 USA     1995 17979 \n",
       "5 China   1995 16636 \n",
       "6 Sudan   1995 10435 \n",
       "7 USA     1996 11926 \n",
       "8 China   1996 13179 \n",
       "9 Sudan   1996 14562 "
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 9 × 3\n",
       "\n",
       "| country &lt;fct&gt; | year &lt;int&gt; | gdp_pc &lt;dbl&gt; |\n",
       "|---|---|---|\n",
       "| USA   | 1994 | 17399 |\n",
       "| China | 1994 | 15964 |\n",
       "| Sudan | 1994 | 19520 |\n",
       "| USA   | 1995 | 17979 |\n",
       "| China | 1995 | 16636 |\n",
       "| Sudan | 1995 | 10435 |\n",
       "| USA   | 1996 | 11926 |\n",
       "| China | 1996 | 13179 |\n",
       "| Sudan | 1996 | 14562 |\n",
       "\n"
      ],
      "text/latex": [
       "A data.frame: 9 × 3\n",
       "\\begin{tabular}{lll}\n",
       " country & year & gdp\\_pc\\\\\n",
       " <fct> & <int> & <dbl>\\\\\n",
       "\\hline\n",
       "\t USA   & 1994 & 17399\\\\\n",
       "\t China & 1994 & 15964\\\\\n",
       "\t Sudan & 1994 & 19520\\\\\n",
       "\t USA   & 1995 & 17979\\\\\n",
       "\t China & 1995 & 16636\\\\\n",
       "\t Sudan & 1995 & 10435\\\\\n",
       "\t USA   & 1996 & 11926\\\\\n",
       "\t China & 1996 & 13179\\\\\n",
       "\t Sudan & 1996 & 14562\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 9 × 3</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>country</th><th scope=col>year</th><th scope=col>gdp_pc</th></tr>\n",
       "\t<tr><th scope=col>&lt;fct&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>USA  </td><td>1994</td><td>17399</td></tr>\n",
       "\t<tr><td>China</td><td>1994</td><td>15964</td></tr>\n",
       "\t<tr><td>Sudan</td><td>1994</td><td>19520</td></tr>\n",
       "\t<tr><td>USA  </td><td>1995</td><td>17979</td></tr>\n",
       "\t<tr><td>China</td><td>1995</td><td>16636</td></tr>\n",
       "\t<tr><td>Sudan</td><td>1995</td><td>10435</td></tr>\n",
       "\t<tr><td>USA  </td><td>1996</td><td>11926</td></tr>\n",
       "\t<tr><td>China</td><td>1996</td><td>13179</td></tr>\n",
       "\t<tr><td>Sudan</td><td>1996</td><td>14562</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ]
     },
     "metadata": {}
    }
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "This time around our dataset has two id variables: `country` and\n",
    "`year`. Why two and not one? One way to think about it is that\n",
    "`country` by itself wouldn't be sufficient to uniquely identify a row,\n",
    "because there are three rows for each country (and likewise with\n",
    "`year`). Combined, however, `country` and `year` uniquely identify\n",
    "each row. In other words, GDP per capita (the only fact or measurement\n",
    "in this dataset) describes a given country in a given year.\n",
    "\n",
    "We can say that the **unit of analysis** in the dataset `countries` is\n",
    "country-year. This means that two id variables (country and\n",
    "year) are required to uniquely identify each row. In the `children`\n",
    "dataset above the unit of analysis is \"child\" or \"person\"."
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Basic commands\n",
    "\n",
    "Here are some commands that are useful for getting to know your data\n",
    "and for understanding dataset structures in general.\n",
    "\n",
    "### Dimensions\n",
    "\n",
    "\n",
    "The first is `dim()`, which gives the dimensions of a data frame. The\n",
    "number of rows are listed first, columns second."
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "source": [
    "dim(countries)"
   ],
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "[1] 9 3"
      ],
      "text/markdown": [
       "1. 9\n",
       "2. 3\n",
       "\n",
       "\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 9\n",
       "\\item 3\n",
       "\\end{enumerate*}\n"
      ],
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>9</li><li>3</li></ol>\n"
      ]
     },
     "metadata": {}
    }
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "Use `nrow()` and `ncol()` to to get the number of rows or columns\n",
    "separately.  These commands are useful for\n",
    "[code generalization](../vectors/#code-generalization)."
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "source": [
    "nrow(countries)\n",
    "ncol(countries)"
   ],
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "[1] 9"
      ],
      "text/markdown": [
       "9"
      ],
      "text/latex": [
       "9"
      ],
      "text/html": [
       "9"
      ]
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "[1] 3"
      ],
      "text/markdown": [
       "3"
      ],
      "text/latex": [
       "3"
      ],
      "text/html": [
       "3"
      ]
     },
     "metadata": {}
    }
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "Snapshots\n",
    "-------------\n",
    "\n",
    "Use `head()` and `tail()` to look at the first and last few rows of\n",
    "a dataset, respectively. This is more useful when we have datasets\n",
    "with many observations. "
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "source": [
    "head(countries)\n",
    "tail(countries)"
   ],
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "  country year gdp_pc\n",
       "1 USA     1994 17399 \n",
       "2 China   1994 15964 \n",
       "3 Sudan   1994 19520 \n",
       "4 USA     1995 17979 \n",
       "5 China   1995 16636 \n",
       "6 Sudan   1995 10435 "
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 3\n",
       "\n",
       "| <!--/--> | country &lt;fct&gt; | year &lt;int&gt; | gdp_pc &lt;dbl&gt; |\n",
       "|---|---|---|---|\n",
       "| 1 | USA   | 1994 | 17399 |\n",
       "| 2 | China | 1994 | 15964 |\n",
       "| 3 | Sudan | 1994 | 19520 |\n",
       "| 4 | USA   | 1995 | 17979 |\n",
       "| 5 | China | 1995 | 16636 |\n",
       "| 6 | Sudan | 1995 | 10435 |\n",
       "\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 3\n",
       "\\begin{tabular}{r|lll}\n",
       "  & country & year & gdp\\_pc\\\\\n",
       "  & <fct> & <int> & <dbl>\\\\\n",
       "\\hline\n",
       "\t1 & USA   & 1994 & 17399\\\\\n",
       "\t2 & China & 1994 & 15964\\\\\n",
       "\t3 & Sudan & 1994 & 19520\\\\\n",
       "\t4 & USA   & 1995 & 17979\\\\\n",
       "\t5 & China & 1995 & 16636\\\\\n",
       "\t6 & Sudan & 1995 & 10435\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 3</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>country</th><th scope=col>year</th><th scope=col>gdp_pc</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;fct&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>USA  </td><td>1994</td><td>17399</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>China</td><td>1994</td><td>15964</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>Sudan</td><td>1994</td><td>19520</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>USA  </td><td>1995</td><td>17979</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>China</td><td>1995</td><td>16636</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>Sudan</td><td>1995</td><td>10435</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ]
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "  country year gdp_pc\n",
       "4 USA     1995 17979 \n",
       "5 China   1995 16636 \n",
       "6 Sudan   1995 10435 \n",
       "7 USA     1996 11926 \n",
       "8 China   1996 13179 \n",
       "9 Sudan   1996 14562 "
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 3\n",
       "\n",
       "| <!--/--> | country &lt;fct&gt; | year &lt;int&gt; | gdp_pc &lt;dbl&gt; |\n",
       "|---|---|---|---|\n",
       "| 4 | USA   | 1995 | 17979 |\n",
       "| 5 | China | 1995 | 16636 |\n",
       "| 6 | Sudan | 1995 | 10435 |\n",
       "| 7 | USA   | 1996 | 11926 |\n",
       "| 8 | China | 1996 | 13179 |\n",
       "| 9 | Sudan | 1996 | 14562 |\n",
       "\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 3\n",
       "\\begin{tabular}{r|lll}\n",
       "  & country & year & gdp\\_pc\\\\\n",
       "  & <fct> & <int> & <dbl>\\\\\n",
       "\\hline\n",
       "\t4 & USA   & 1995 & 17979\\\\\n",
       "\t5 & China & 1995 & 16636\\\\\n",
       "\t6 & Sudan & 1995 & 10435\\\\\n",
       "\t7 & USA   & 1996 & 11926\\\\\n",
       "\t8 & China & 1996 & 13179\\\\\n",
       "\t9 & Sudan & 1996 & 14562\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 × 3</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>country</th><th scope=col>year</th><th scope=col>gdp_pc</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;fct&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>4</th><td>USA  </td><td>1995</td><td>17979</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>China</td><td>1995</td><td>16636</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>Sudan</td><td>1995</td><td>10435</td></tr>\n",
       "\t<tr><th scope=row>7</th><td>USA  </td><td>1996</td><td>11926</td></tr>\n",
       "\t<tr><th scope=row>8</th><td>China</td><td>1996</td><td>13179</td></tr>\n",
       "\t<tr><th scope=row>9</th><td>Sudan</td><td>1996</td><td>14562</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ]
     },
     "metadata": {}
    }
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "Other useful commands to get to know variables better include `summary()`,\n",
    "`table()`, and `prop.table()`. "
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "source": [
    "# Get some summary information about each variable\n",
    "summary(countries)\n",
    "\n",
    "# Number of observations by country \n",
    "table(countries$country)\n",
    "\n",
    "# Proportion of observations by country \n",
    "prop.table(table(countries$country))"
   ],
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "  country       year          gdp_pc     \n",
       " USA  :3   Min.   :1994   Min.   :10435  \n",
       " China:3   1st Qu.:1994   1st Qu.:13179  \n",
       " Sudan:3   Median :1995   Median :15964  \n",
       "           Mean   :1995   Mean   :15289  \n",
       "           3rd Qu.:1996   3rd Qu.:17399  \n",
       "           Max.   :1996   Max.   :19520  "
      ]
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "\n",
       "  USA China Sudan \n",
       "    3     3     3 "
      ]
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "\n",
       "      USA     China     Sudan \n",
       "0.3333333 0.3333333 0.3333333 "
      ]
     },
     "metadata": {}
    }
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "Accessing specific rows and columns\n",
    "-------------------\n",
    "\n",
    "Like with vectors, brackets (`[]`) can be used to access data in\n",
    "datasets. But unlike with vectors, we need to input *two* arguments\n",
    "--- separated by a comma --- into the brackets. The first argument\n",
    "always applies to rows while the second applies to columns. "
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "source": [
    "countries <- data.frame(\n",
    "    expand.grid(country = c(\"USA\", \"China\", \"Sudan\"), year = 1994:1996),\n",
    "    gdp_pc = round(runif(9, 1000, 20000), 0)\n",
    "    )\n",
    "countries\n",
    "\n",
    "# Access row 2, col 3\n",
    "countries[2, 3]\n",
    "\n",
    "# Access entire row 5\n",
    "countries[5, ] #note: leaving second argument blank\n",
    "\n",
    "# Access entire column 3\n",
    "countries[, 3] #note: leaving first argument blank"
   ],
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "  country year gdp_pc\n",
       "1 USA     1994  4174 \n",
       "2 China   1994  8345 \n",
       "3 Sudan   1994 12108 \n",
       "4 USA     1995  1683 \n",
       "5 China   1995 19137 \n",
       "6 Sudan   1995 17625 \n",
       "7 USA     1996  8003 \n",
       "8 China   1996 12804 \n",
       "9 Sudan   1996 17426 "
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 9 × 3\n",
       "\n",
       "| country &lt;fct&gt; | year &lt;int&gt; | gdp_pc &lt;dbl&gt; |\n",
       "|---|---|---|\n",
       "| USA   | 1994 |  4174 |\n",
       "| China | 1994 |  8345 |\n",
       "| Sudan | 1994 | 12108 |\n",
       "| USA   | 1995 |  1683 |\n",
       "| China | 1995 | 19137 |\n",
       "| Sudan | 1995 | 17625 |\n",
       "| USA   | 1996 |  8003 |\n",
       "| China | 1996 | 12804 |\n",
       "| Sudan | 1996 | 17426 |\n",
       "\n"
      ],
      "text/latex": [
       "A data.frame: 9 × 3\n",
       "\\begin{tabular}{lll}\n",
       " country & year & gdp\\_pc\\\\\n",
       " <fct> & <int> & <dbl>\\\\\n",
       "\\hline\n",
       "\t USA   & 1994 &  4174\\\\\n",
       "\t China & 1994 &  8345\\\\\n",
       "\t Sudan & 1994 & 12108\\\\\n",
       "\t USA   & 1995 &  1683\\\\\n",
       "\t China & 1995 & 19137\\\\\n",
       "\t Sudan & 1995 & 17625\\\\\n",
       "\t USA   & 1996 &  8003\\\\\n",
       "\t China & 1996 & 12804\\\\\n",
       "\t Sudan & 1996 & 17426\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 9 × 3</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>country</th><th scope=col>year</th><th scope=col>gdp_pc</th></tr>\n",
       "\t<tr><th scope=col>&lt;fct&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>USA  </td><td>1994</td><td> 4174</td></tr>\n",
       "\t<tr><td>China</td><td>1994</td><td> 8345</td></tr>\n",
       "\t<tr><td>Sudan</td><td>1994</td><td>12108</td></tr>\n",
       "\t<tr><td>USA  </td><td>1995</td><td> 1683</td></tr>\n",
       "\t<tr><td>China</td><td>1995</td><td>19137</td></tr>\n",
       "\t<tr><td>Sudan</td><td>1995</td><td>17625</td></tr>\n",
       "\t<tr><td>USA  </td><td>1996</td><td> 8003</td></tr>\n",
       "\t<tr><td>China</td><td>1996</td><td>12804</td></tr>\n",
       "\t<tr><td>Sudan</td><td>1996</td><td>17426</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ]
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "[1] 8345"
      ],
      "text/markdown": [
       "8345"
      ],
      "text/latex": [
       "8345"
      ],
      "text/html": [
       "8345"
      ]
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "  country year gdp_pc\n",
       "5 China   1995 19137 "
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 1 × 3\n",
       "\n",
       "| <!--/--> | country &lt;fct&gt; | year &lt;int&gt; | gdp_pc &lt;dbl&gt; |\n",
       "|---|---|---|---|\n",
       "| 5 | China | 1995 | 19137 |\n",
       "\n"
      ],
      "text/latex": [
       "A data.frame: 1 × 3\n",
       "\\begin{tabular}{r|lll}\n",
       "  & country & year & gdp\\_pc\\\\\n",
       "  & <fct> & <int> & <dbl>\\\\\n",
       "\\hline\n",
       "\t5 & China & 1995 & 19137\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 1 × 3</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>country</th><th scope=col>year</th><th scope=col>gdp_pc</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;fct&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>5</th><td>China</td><td>1995</td><td>19137</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ]
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "[1]  4174  8345 12108  1683 19137 17625  8003 12804 17426"
      ],
      "text/markdown": [
       "1. 4174\n",
       "2. 8345\n",
       "3. 12108\n",
       "4. 1683\n",
       "5. 19137\n",
       "6. 17625\n",
       "7. 8003\n",
       "8. 12804\n",
       "9. 17426\n",
       "\n",
       "\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 4174\n",
       "\\item 8345\n",
       "\\item 12108\n",
       "\\item 1683\n",
       "\\item 19137\n",
       "\\item 17625\n",
       "\\item 8003\n",
       "\\item 12804\n",
       "\\item 17426\n",
       "\\end{enumerate*}\n"
      ],
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>4174</li><li>8345</li><li>12108</li><li>1683</li><li>19137</li><li>17625</li><li>8003</li><li>12804</li><li>17426</li></ol>\n"
      ]
     },
     "metadata": {}
    }
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "In general, though, accessing rows and columns by index is bad for\n",
    "[code generalization](../vectors/#code-generalization).  It\n",
    "particularly causes problems when you add or delete rows/columns,\n",
    "because then the indexing will change (e.g., column 3 representing GDP\n",
    "per capita may now be in column 4).\n",
    "\n",
    "For this reason, it's better to access columns using column\n",
    "names. "
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "source": [
    "# Access a column using column/variable name (two equivalent approaches)\n",
    "countries$year\n",
    "countries[, \"year\"]"
   ],
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "[1] 1994 1994 1994 1995 1995 1995 1996 1996 1996"
      ],
      "text/markdown": [
       "1. 1994\n",
       "2. 1994\n",
       "3. 1994\n",
       "4. 1995\n",
       "5. 1995\n",
       "6. 1995\n",
       "7. 1996\n",
       "8. 1996\n",
       "9. 1996\n",
       "\n",
       "\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 1994\n",
       "\\item 1994\n",
       "\\item 1994\n",
       "\\item 1995\n",
       "\\item 1995\n",
       "\\item 1995\n",
       "\\item 1996\n",
       "\\item 1996\n",
       "\\item 1996\n",
       "\\end{enumerate*}\n"
      ],
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>1994</li><li>1994</li><li>1994</li><li>1995</li><li>1995</li><li>1995</li><li>1996</li><li>1996</li><li>1996</li></ol>\n"
      ]
     },
     "metadata": {}
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "[1] 1994 1994 1994 1995 1995 1995 1996 1996 1996"
      ],
      "text/markdown": [
       "1. 1994\n",
       "2. 1994\n",
       "3. 1994\n",
       "4. 1995\n",
       "5. 1995\n",
       "6. 1995\n",
       "7. 1996\n",
       "8. 1996\n",
       "9. 1996\n",
       "\n",
       "\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 1994\n",
       "\\item 1994\n",
       "\\item 1994\n",
       "\\item 1995\n",
       "\\item 1995\n",
       "\\item 1995\n",
       "\\item 1996\n",
       "\\item 1996\n",
       "\\item 1996\n",
       "\\end{enumerate*}\n"
      ],
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>1994</li><li>1994</li><li>1994</li><li>1995</li><li>1995</li><li>1995</li><li>1996</li><li>1996</li><li>1996</li></ol>\n"
      ]
     },
     "metadata": {}
    }
   ],
   "metadata": {
    "lines_to_next_cell": 0
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "Note that when we're accessing a column this way, it's just a vector\n",
    "and all the things we've learned about [vectors](../vectors) apply.\n",
    "For example:"
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "source": [
    "# Get mean gdp per cap\n",
    "mean(countries$gdp_pc)"
   ],
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "[1] 11256.11"
      ],
      "text/markdown": [
       "11256.1111111111"
      ],
      "text/latex": [
       "11256.1111111111"
      ],
      "text/html": [
       "11256.1111111111"
      ]
     },
     "metadata": {}
    }
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "To access rows, it's best to use a logical statement, which is covered\n",
    "in more detail in a separate tutorial on\n",
    "[modifying data](../modifying-data).  But just to\n",
    "give an example, here's how we can access a row using bracket notation\n",
    "and a logical statement:"
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "source": [
    "countries[countries$year == 1995 & countries$country == \"USA\", ]"
   ],
   "outputs": [
    {
     "output_type": "display_data",
     "data": {
      "text/plain": [
       "  country year gdp_pc\n",
       "4 USA     1995 1683  "
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 1 × 3\n",
       "\n",
       "| <!--/--> | country &lt;fct&gt; | year &lt;int&gt; | gdp_pc &lt;dbl&gt; |\n",
       "|---|---|---|---|\n",
       "| 4 | USA | 1995 | 1683 |\n",
       "\n"
      ],
      "text/latex": [
       "A data.frame: 1 × 3\n",
       "\\begin{tabular}{r|lll}\n",
       "  & country & year & gdp\\_pc\\\\\n",
       "  & <fct> & <int> & <dbl>\\\\\n",
       "\\hline\n",
       "\t4 & USA & 1995 & 1683\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 1 × 3</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>country</th><th scope=col>year</th><th scope=col>gdp_pc</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;fct&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>4</th><td>USA</td><td>1995</td><td>1683</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ]
     },
     "metadata": {}
    }
   ],
   "metadata": {
    "lines_to_next_cell": 0
   }
  },
  {
   "cell_type": "markdown",
   "source": [],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "## Reading data \n"
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "Note: In this section we'll be working with a dataset called\n",
    "`world-small.csv`, which you can download [here](data/world-small.csv).\n",
    "\n",
    "So far we've created datasets ourselves. Oftentimes, however, we'll\n",
    "want to read a dataset into R from file. Datasets come in many formats\n",
    "--- e.g., .csv, .txt, .dta, and .RData. R can read most data formats\n",
    "as is, but sometimes it may be necessary to manually reformat some\n",
    "elements in the file or even to reconvert the whole file to a\n",
    "different format (e.g., using Stat/Transfer). For now, we'll assume\n",
    "that the file is in a readable format.\n",
    "\n",
    "To read a file you need to \n",
    "\n",
    "1. Specify where the file is located on your computer. This is referred to \n",
    "as setting your working directory. \n",
    "2. Execute a command that will read the file from your working directory. "
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "Setting the working directory \n",
    "----------------------\n",
    "\n",
    "You can set your working directory manually. In RStudio, go to\n",
    "Session --> Set Working Directory --> Choose Directory...\n",
    "and find the folder in which your file is located.\n",
    "\n",
    "While this works, you should also set the working directory using\n",
    "code. Use `setwd(path-to-dir)` where `path-to-dir` is the the path to\n",
    "the folder in which the file is located. How can you find this path?\n",
    "Here are instructions for\n",
    "[Windows](https://technet.microsoft.com/en-us/magazine/ff678296.aspx)\n",
    "and [mac](http://josharcher.uk/code/find-path-to-folder-on-mac/).\n",
    "If you're still not sure how to do this, take a look at\n",
    "[this tutorial](https://sites.google.com/site/manabusakamoto/home/r-tutorials/r-tutorial-4).\n",
    "\n",
    "To check that your working directory includes the file you want\n",
    "to read, use `dir()` without anything in the parentheses. This function\n",
    "outputs all the files in your working directory into the R console.\n",
    "So, if you want to read the `world-small.csv` file that you downloaded above,\n",
    "you should see this file listed when you execute `dir()`. "
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "Reading the file \n",
    "----------------------\n",
    "\n",
    "Now that we've told R where to look for our file, it's time to read\n",
    "it. Different commands are used to read different types of files. This\n",
    "is the syntax used for reading a .csv file:"
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "source": [
    "world <- read.csv(\"data/world-small.csv\")"
   ],
   "outputs": [],
   "metadata": {
    "tags": [
     "remove_input"
    ]
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "I'm reading the file from the working directory and assigning it\n",
    "to the object `world`, which becomes of class `data.frame`. "
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "source": [
    "class(world)"
   ],
   "outputs": [],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "Let's check if the file was read correctly, using `dim()`\n",
    "(returns the dimensions), `head()` (returns the top six rows),\n",
    "and `summary()` (returns summary information about each variable):"
   ],
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "source": [
    "dim(world) #the number of rows and columns \n",
    "head(world) #the first few rows of the dataset\n",
    "summary(world) #a summary of the variables in the dataset"
   ],
   "outputs": [],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "Everything looks as we would have hoped."
   ],
   "metadata": {}
  },
  {
   "cell_type": "markdown",
   "source": [
    "Exercises\n",
    "============\n",
    "\n",
    "1. Read the `world-small.csv` data into R and store it in an object\n",
    "called `world`. (Set your working directory using code first.) \n",
    "\n",
    "2. (Conceptual) What is the unit of analysis in the dataset? What's the name\n",
    "of the dataset's id variable?\n",
    "\n",
    "3. How many observations does `world` have? How many variables? Use an R\n",
    "command to find out.\n",
    "\n",
    "4. Use brackets and a logical statement to inspect all the values for\n",
    "   Nigeria and United States. That is, your code should return two\n",
    "   entire rows of the dataset. \n",
    "\n",
    "5. Use R to return China's Polity IV score. As in question 4, use a logical\n",
    "statement and brackets, but don't return the entire row. Rather, return a single\n",
    "value with the Polity IV score.\n",
    "\n",
    "6. What is the lowest GDP per capita in the dataset? (Use R to return only the value.)\n",
    "\n",
    "7. What country has the lowest GDP per capita? (Your code should\n",
    "return the country name and be general enough so that if the observations\n",
    "in the dataset --- or their order --- change, your code should still return the\n",
    "country with the lowest GDP per capita.)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ],
   "metadata": {}
  }
 ],
 "metadata": {
  "jupytext": {
   "cell_metadata_filter": "tags,eval,-all",
   "main_language": "R",
   "notebook_metadata_filter": "-all"
  },
  "language_info": {
   "name": "R",
   "codemirror_mode": "r",
   "pygments_lexer": "r",
   "mimetype": "text/x-r-source",
   "file_extension": ".r",
   "version": "4.1.0"
  },
  "kernelspec": {
   "name": "ir",
   "display_name": "R",
   "language": "R"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}